---
# Copyright 2022 The KubeFin Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubefin-agent
  namespace: kubefin
  labels:
    app.kubernetes.io/component: kubefin-agent
    app.kubernetes.io/name: kubefin
    app.kubernetes.io/version: devel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubefin-agent
  template:
    metadata:
      labels:
        app: kubefin-agent
        app.kubernetes.io/component: kubefin-agent
        app.kubernetes.io/name: kubefin
        app.kubernetes.io/version: devel
    spec:
      serviceAccountName: kubefin-sa
      containers:
      - name: kubefin-agent
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: {KUBEFIN_AGENT_IMAGE}
        args:
          - --v=4 # debug level log
        resources:
          requests:
            cpu: 500m
            memory: 1000Mi
          limits:
            cpu: 500m
            memory: 1000Mi
        env:
          # If configure as default, it will detect the cloud provider automatically
          - name: CLOUD_PROVIDER
            value: "{CLOUD_PROVIDER}"
          # If the name is defined, we will use this, if not we will try to get.
          - name: CLUSTER_NAME
            value: "{CLUSTER_NAME}"
          # This id should be unique if you deploy as multi-cluster
          - name: CLUSTER_ID
            value: "{CLUSTER_ID}"
          # This only used when we can't recognize the cloud provider or default
          - name: CUSTOM_CPU_CORE_HOUR_PRICE
            value: ""
          # This only used when we can't recognize the cloud provider or default
          - name: CUSTOM_RAM_GB_HOUR_PRICE
            value: ""
          # the eatch node CPU deviation core between the actual core and the one obtained from node.status.capacity, this only used when we can't recognize the cloud provider
          - name: NODE_CPU_DEVIATION
            value: "0.0"
          # the eatch node ram deviation gb between the actual core and the one obtained from node.status.capacity, this only used when we can't recognize the cloud provider
          - name: NODE_RAM_DEVIATION
            value: "0.4"
          # CPU core price / RAM GB price, this only used when public cloud provider
          - name: CPUCORE_RAMGB_PRICE_RATIO
            value: "3"
          - name: LEADER_ELECTION_ID
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        ports:
          - name: healthcheck
            containerPort: 9090
          - name: metrics
            containerPort: 8080
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:0.72.0
        resources:
          requests:
            cpu: 500m
            memory: 1500Mi
        volumeMounts:
          - mountPath: /etc/otelcol-contrib/config.yaml
            name: otel-collector-config
            subPath: config.yaml
            readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
        - name: otel-collector-config
          configMap:
            name: otel-collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: kubefin-agent-service
  namespace: kubefin
  labels:
    app: kubefin-agent
    app.kubernetes.io/component: kubefin-agent
    app.kubernetes.io/version: devel
    app.kubernetes.io/name: kubefin
spec:
  selector:
    app: kubefin-agent
  ports:
    - name: kubefin-api
      port: 8080
      targetPort: 8080
  type: ClusterIP
